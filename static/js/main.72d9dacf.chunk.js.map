{"version":3,"sources":["components/Dashboard/Controls/Controls.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","Controls","handleChangeInput","handleSubmit","inputValue","className","style","controls","controlsOverlay","controlsInput","type","value","onChange","controlsBtn","name","onClick","Balance","balance","changeBalance","deposit","withdraw","balanceFormat","toLocaleString","depositFormat","withdrawFormat","TransactionHistory","transactions","history","tableHeader","tableRow","map","el","key","id","amount","date","Dashboard","state","target","includes","notifyIncorrectInput","setState","evt","preventDefault","newBalance","Number","notifyNotSum","handleSubmitSetState","notifyNoMoney","toast","prevState","shortid","generate","Date","reduce","acc","this","dashboard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72d9dacf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3rKI_\",\"controlsOverlay\":\"Controls_controlsOverlay__XroL-\",\"controlsInput\":\"Controls_controlsInput__2VT4O\",\"controlsBtn\":\"Controls_controlsBtn__3vona\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1Ay12\",\"tableHeader\":\"TransactionHistory_tableHeader__2fc_n\",\"tableRow\":\"TransactionHistory_tableRow__3fp1C\",\"tBodyRow\":\"TransactionHistory_tBodyRow__253MV TransactionHistory_tableRow__3fp1C\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nconst Controls = ({ handleChangeInput, handleSubmit, inputValue }) => {\n  return (\n    <section className={style.controls}>\n      <div className={style.controlsOverlay}>\n        <input\n          className={style.controlsInput}\n          type=\"number\"\n          value={inputValue}\n          onChange={handleChangeInput}\n        />\n        <button\n          className={style.controlsBtn}\n          type=\"button\"\n          name=\"deposit\"\n          onClick={handleSubmit}\n        >\n          Deposit\n        </button>\n        <button\n          className={style.controlsBtn}\n          type=\"button\"\n          name=\"withdraw\"\n          onClick={handleSubmit}\n        >\n          Withdraw\n        </button>\n      </div>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  handleChangeInput: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ balance, changeBalance }) => {\n  const deposit = changeBalance('deposit');\n  const withdraw = changeBalance('withdraw');\n  const balanceFormat = balance.toLocaleString('ru-RU');\n  const depositFormat = deposit.toLocaleString('ru-RU');\n  const withdrawFormat = withdraw.toLocaleString('ru-RU');\n  return (\n    <section className={style.balance}>\n      <p className={style.deposit}>\n        <span>⬆ </span>\n        {depositFormat}$\n      </p>\n      <p className={style.withdraw}>\n        <span>⬇ </span>\n        {withdrawFormat}$\n      </p>\n      <span>Balance: {balanceFormat}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  changeBalance: PropTypes.func.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={style.history}>\n      <thead className={style.tableHeader}>\n        <tr className={style.tableRow}>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(el => (\n          <tr className={style.tableRow} key={el.id}>\n            <td>{el.type}</td>\n            <td>{el.amount}$</td>\n            <td>{el.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from './Dashboard.module.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    inputValue: '',\n  };\n\n  handleChangeInput = ({ target }) => {\n    const { value } = target;\n    if (value.includes('-')) {\n      this.notifyIncorrectInput();\n    } else {\n      this.setState({ inputValue: value });\n    }\n  };\n\n  handleSubmit = evt => {\n    const { balance, inputValue } = this.state;\n    const { name } = evt.target;\n\n    evt.preventDefault();\n    let newBalance = 0;\n    if (Number(inputValue) === 0) {\n      this.notifyNotSum();\n    } else if (name === 'deposit') {\n      newBalance = balance + Number(inputValue);\n      this.handleSubmitSetState(newBalance, name, inputValue);\n    } else if (name === 'withdraw') {\n      if (Number(inputValue) > balance) {\n        this.notifyNoMoney();\n      } else {\n        newBalance = balance - Number(inputValue);\n        this.handleSubmitSetState(newBalance, name, inputValue);\n      }\n    }\n  };\n\n  notifyNoMoney = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n\n  notifyNotSum = () => toast('Введите сумму для проведения операции!');\n\n  notifyIncorrectInput = () => toast('Сумма не должна быть отрицательной!');\n\n  handleSubmitSetState = (newBalance, name, inputValue) => {\n    this.setState(\n      prevState => ({\n        balance: newBalance,\n        inputValue: '',\n        transactions: [\n          ...prevState.transactions,\n          {\n            id: shortid.generate(),\n            type: name,\n            amount: inputValue,\n            date: new Date().toLocaleString('en-GB'),\n          },\n        ],\n      }),\n      this.changeBalance,\n    );\n  };\n\n  changeBalance = type => {\n    const { transactions } = this.state;\n\n    return transactions.reduce(\n      (acc, el) => (el.type === type ? acc + Number(el.amount) : acc),\n      0,\n    );\n  };\n\n  render() {\n    const { transactions, balance, inputValue } = this.state;\n\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          inputValue={inputValue}\n          handleChangeInput={this.handleChangeInput}\n          handleSubmit={this.handleSubmit}\n        />\n        <Balance balance={balance} changeBalance={this.changeBalance} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard.jsx';\n\nconst App = () => {\n  return <Dashboard />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1acOZ\",\"deposit\":\"Balance_deposit___27xi\",\"withdraw\":\"Balance_withdraw__2WwjM\"};"],"sourceRoot":""}
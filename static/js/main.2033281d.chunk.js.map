{"version":3,"sources":["components/Dashboard/Controls/Controls.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.js","components/Dashboard/Balance/Balance.js","components/Dashboard/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App/App.js","index.js","components/Dashboard/Balance/Balance.module.css"],"names":["module","exports","Controls","handleChangeInput","handleSubmit","inputValue","className","style","controls","controlsOverlay","controlsInput","type","value","onChange","controlsBtn","name","onClick","Balance","balance","deposit","withdraw","balanceFormat","toLocaleString","depositFormat","withdrawFormat","TransactionHistory","transactions","history","tableHeader","tableRow","map","el","key","id","amount","date","Dashboard","state","target","setState","evt","preventDefault","newBalance","Number","notifyNotSum","handleSubmitSetState","notifyNoMoney","toast","prevState","shortid","generate","Date","changeBalance","depositSum","reduce","acc","withdrawSum","this","dashboard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2033281d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3rKI_\",\"controlsOverlay\":\"Controls_controlsOverlay__XroL-\",\"controlsInput\":\"Controls_controlsInput__2VT4O\",\"controlsBtn\":\"Controls_controlsBtn__3vona\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__1Ay12\",\"tableHeader\":\"TransactionHistory_tableHeader__2fc_n\",\"tableRow\":\"TransactionHistory_tableRow__3fp1C\",\"tBodyRow\":\"TransactionHistory_tBodyRow__253MV TransactionHistory_tableRow__3fp1C\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Controls.module.css';\n\nconst Controls = ({ handleChangeInput, handleSubmit, inputValue }) => {\n  return (\n    <section className={style.controls}>\n      <div className={style.controlsOverlay}>\n        <input\n          className={style.controlsInput}\n          type=\"number\"\n          value={inputValue}\n          onChange={handleChangeInput}\n        />\n        <button\n          className={style.controlsBtn}\n          type=\"button\"\n          name=\"deposit\"\n          onClick={handleSubmit}\n        >\n          Deposit\n        </button>\n        <button\n          className={style.controlsBtn}\n          type=\"button\"\n          name=\"withdraw\"\n          onClick={handleSubmit}\n        >\n          Withdraw\n        </button>\n      </div>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  handleChangeInput: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Balance.module.css';\n\nconst Balance = ({ balance, deposit, withdraw }) => {\n  const balanceFormat = balance.toLocaleString('ru-RU');\n  const depositFormat = deposit.toLocaleString('ru-RU');\n  const withdrawFormat = withdraw.toLocaleString('ru-RU');\n  return (\n    <section className={style.balance}>\n      {deposit ? (\n        <p className={style.deposit}>\n          <span>⬆ </span>\n          {depositFormat}$\n        </p>\n      ) : null}\n      {withdraw ? (\n        <p className={style.withdraw}>\n          <span>⬇ </span>\n          {withdrawFormat}$\n        </p>\n      ) : null}\n      <span>Balance: {balanceFormat}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  deposit: PropTypes.number.isRequired,\n  withdraw: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => {\n  return (\n    <table className={style.history}>\n      <thead className={style.tableHeader}>\n        <tr className={style.tableRow}>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(el => (\n          <tr className={style.tableRow} key={el.id}>\n            <td>{el.type}</td>\n            <td>{el.amount}$</td>\n            <td>{el.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport style from './Dashboard.module.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    inputValue: '',\n    deposit: 0,\n    withdraw: 0,\n  };\n\n  handleChangeInput = ({ target }) => {\n    this.setState({ inputValue: target.value });\n  };\n\n  handleSubmit = evt => {\n    const { balance, inputValue } = this.state;\n    const { name } = evt.target;\n\n    evt.preventDefault();\n    let newBalance = 0;\n    if (Number(inputValue) === 0) {\n      this.notifyNotSum();\n    } else if (name === 'deposit') {\n      newBalance = balance + Number(inputValue);\n      this.handleSubmitSetState(newBalance, name, inputValue);\n    } else if (name === 'withdraw') {\n      if (Number(inputValue) > balance) {\n        this.notifyNoMoney();\n      } else {\n        newBalance = balance - Number(inputValue);\n        this.handleSubmitSetState(newBalance, name, inputValue);\n      }\n    }\n  };\n\n  notifyNoMoney = () =>\n    toast('На счету недостаточно средств для проведения операции!');\n\n  notifyNotSum = () => toast('Введите сумму для проведения операции!');\n\n  handleSubmitSetState = (newBalance, name, inputValue) => {\n    this.setState(\n      prevState => ({\n        balance: newBalance,\n        inputValue: '',\n        transactions: [\n          ...prevState.transactions,\n          {\n            id: shortid.generate(),\n            type: name,\n            amount: inputValue,\n            date: new Date().toLocaleString('en-GB'),\n          },\n        ],\n      }),\n      this.changeBalance,\n    );\n  };\n\n  changeBalance = () => {\n    const { transactions } = this.state;\n\n    const depositSum = transactions.reduce((acc, el) => {\n      return el.type === 'deposit' ? acc + Number(el.amount) : acc;\n    }, 0);\n    const withdrawSum = transactions.reduce((acc, el) => {\n      return el.type === 'withdraw' ? acc + Number(el.amount) : acc;\n    }, 0);\n    this.setState({\n      deposit: depositSum,\n      withdraw: withdrawSum,\n    });\n  };\n\n  render() {\n    const { transactions, balance, inputValue, deposit, withdraw } = this.state;\n\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          inputValue={inputValue}\n          handleChangeInput={this.handleChangeInput}\n          handleSubmit={this.handleSubmit}\n        />\n        <Balance balance={balance} deposit={deposit} withdraw={withdraw} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport './App.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => {\n  return <Dashboard />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__1acOZ\",\"deposit\":\"Balance_deposit___27xi\",\"withdraw\":\"Balance_withdraw__2WwjM\"};"],"sourceRoot":""}